How to use call by reference in c?
 The very first clue i got is to use pointers.
Why cant we use call by reference in c?
What is a pointer in c ?
 Pointers are variables whose values are memory address.From this defination i get a brief idea that pointer provides the addess 
 to access the value of the variable.
How to define a pointer?
 int *countPtr, count;
 here int is the return type *countPtr is the pointer which points to the value of the variable count.
specifies that variable 
countPtr
 is of type 
int* (i.e., a pointer to an integer) and is read (right to left), “countPtr is a pointer to  int ” or “countPtr
 points to an object of type  int .” Also, the variable countis defined to be an int, not a pointer to an int. The *applies 
only to countPtr in the definition. When * is used in this manner in a definition, it indicates
that the variable being defined is a pointer. Pointers can be defined to point to objects of
any type. To prevent the ambiguity of declaring pointer and non-pointer variables in the
same declaration as shown above, you should always declare
 only one variable per declaration. 
what is "*"?
 The unary* operator, commonly referred to as the indirection operator or dereferencing operator, returns the value
 of the object to which its operand (i.e., a pointer) points. For example, the statementprints the value of variable y,   
 namely 5. Using * in this manner is called dereferencing a pointer.
 
what is a constant qualifier?
  The  const qualifier enables you to inform the compiler that the value of a particular vari-
  able should not be modified. 
write an input function.
 #include<stdio.h>
int input()
{
 	int *x,*y,a,b;
	printf("Enter two numbers");
	scanf("%d%d",&a,&c);
	*x=a;
	*y=b;
	return q;
}
void main()
{
	q=input();
}
	I got the following errors...
 
pointers.c:6:19: error: ‘c’ undeclared (first use in this function)
  scanf("%d%d",&a,&c);
                   ^
pointers.c:6:19: note: each undeclared identifier is reported only once for each function it appears in
pointers.c:9:9: error: ‘q’ undeclared (first use in this function)
  return q;
         ^
pointers.c: In function ‘main’:
pointers.c:13:2: error: ‘q’ undeclared (first use in this function)
  q=input();
I was able to correct all my errors and the code is:
#include<stdio.h>
int input()
{
 	int *x,*y,a,b,q;
	printf("Enter two numbers");
	scanf("%d%d",&a,&b);
	*x=a;
	*y=b;
	return q;
}
int main(void)
{
	int q;
	q=input();
}
	But i got segmentation error and core dumped
what is segmentation error and core dumping?
Core Dump/Segmentation fault is a specific kind of error caused by accessing memory that “does not belong to you.”
 When a piece of code tries to do read and write operation in a read only location in memory or freed block of memory,
 it is known as core dump.It is an error indicating memory corruption.
 now i cleared the whole program!
 I reffered the book and got to know the syntax and the way we pass an address of the variable using pointers.
 In function ‘main’:
pointers.c:20:4: error: called object ‘sum’ is not a function or function pointer
  z=sum(x,y);
    ^~~
pointers.c:9:6: note: declared here
  int sum;
      ^~~
pointers.c: In function ‘compute’:
pointers.c:22:1: error: expected declaration or statement at end of input
 }
 I renamed the compute function as add and wrote the actual compute part in the main.
then i found that my program is just taking the values and not returning output.
Then i got to know i havent called the output function in the main.
After clearing all these errors my program ran successfully.




 
